<%- include('partials/header', { title: 'User Management' }) %>

<div class="container-fluid fade-in">
  <!-- Header Section -->
  <div class="flex items-center justify-between mb-8">
    <div>
      <h1 class="text-3xl font-bold text-white mb-2">User Management</h1>
      <p class="text-gray-400">Manage users and their permissions</p>
    </div>
    <button class="btn-hover-effect bg-indigo-600 text-white px-4 py-2 rounded-lg flex items-center space-x-2" onclick="location.reload()">
      <i class="fas fa-sync-alt"></i>
      <span>Refresh Users</span>
    </button>
  </div>

  <!-- Alert Messages -->
  <% if(success_msg !== '') { %>
    <div class="scale-in bg-green-500 bg-opacity-10 border border-green-500 text-green-500 px-4 py-3 rounded-lg mb-4" role="alert">
      <%= success_msg %>
      <button type="button" class="float-right" onclick="this.parentElement.remove()">
        <i class="fas fa-times"></i>
      </button>
    </div>
  <% } %>

  <% if(error_msg !== '') { %>
    <div class="scale-in bg-red-500 bg-opacity-10 border border-red-500 text-red-500 px-4 py-3 rounded-lg mb-4" role="alert">
      <%= error_msg %>
      <button type="button" class="float-right" onclick="this.parentElement.remove()">
        <i class="fas fa-times"></i>
      </button>
    </div>
  <% } %>

  <!-- User Stats -->
  <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
    <!-- Total Users Card -->
    <div class="glass-effect rounded-xl p-6 card-hover scale-in">
      <div class="flex items-center justify-between mb-4">
        <div class="p-3 bg-indigo-600 bg-opacity-20 rounded-lg">
          <i class="fas fa-users text-2xl text-indigo-500"></i>
        </div>
        <span class="text-2xl font-bold text-white">
          <%= users ? users.length : 0 %>
        </span>
      </div>
      <h3 class="text-lg font-semibold text-white">Total Users</h3>
      <p class="text-gray-400 mt-1">Registered platform users</p>
    </div>

    <!-- Verified Users Card -->
    <div class="glass-effect rounded-xl p-6 card-hover scale-in" style="animation-delay: 0.1s">
      <div class="flex items-center justify-between mb-4">
        <div class="p-3 bg-green-600 bg-opacity-20 rounded-lg">
          <i class="fas fa-check-circle text-2xl text-green-500"></i>
        </div>
        <span class="text-2xl font-bold text-white">
          <% 
            let verifiedCount = 0;
            if (users) {
              users.forEach(user => {
                if (user.isVerified) verifiedCount++;
              });
            }
          %>
          <%= verifiedCount %>
        </span>
      </div>
      <h3 class="text-lg font-semibold text-white">Verified Users</h3>
      <p class="text-gray-400 mt-1">Identity verified accounts</p>
    </div>

    <!-- Total Vouches Card -->
    <div class="glass-effect rounded-xl p-6 card-hover scale-in" style="animation-delay: 0.2s">
      <div class="flex items-center justify-between mb-4">
        <div class="p-3 bg-purple-600 bg-opacity-20 rounded-lg">
          <i class="fas fa-award text-2xl text-purple-500"></i>
        </div>
        <span class="text-2xl font-bold text-white">
          <% 
            let vouchTotal = 0;
            if (users) {
              users.forEach(user => {
                vouchTotal += user.positive || 0;
              });
            }
          %>
          <%= vouchTotal %>
        </span>
      </div>
      <h3 class="text-lg font-semibold text-white">Total Vouches</h3>
      <p class="text-gray-400 mt-1">Positive community feedback</p>
    </div>
  </div>

  <!-- Users Table -->
  <div class="glass-effect rounded-xl p-6">
    <div class="flex justify-between items-center mb-6">
      <h2 class="text-xl font-semibold text-white">Users</h2>
      <div class="relative">
        <i class="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
        <input type="text" 
               id="userSearch" 
               class="bg-gray-900 border border-gray-700 text-white pl-10 pr-4 py-2 rounded-lg focus:outline-none focus:border-indigo-500"
               placeholder="Search users...">
      </div>
    </div>

    <div class="overflow-x-auto">
      <table class="w-full" id="usersTable">
        <thead>
          <tr class="text-left text-gray-400 border-b border-gray-700">
            <th class="pb-3 px-4">#</th>
            <th class="pb-3 px-4">Discord ID</th>
            <th class="pb-3 px-4">Username</th>
            <th class="pb-3 px-4">Vouches</th>
            <th class="pb-3 px-4">Status</th>
            <th class="pb-3 px-4 text-right">Actions</th>
          </tr>
        </thead>
        <tbody class="text-gray-300">
          <% if (users && users.length > 0) { %>
            <% users.forEach((user, index) => { %>
              <tr class="border-b border-gray-800 hover:bg-gray-800/50 transition-colors">
                <td class="py-4 px-4"><%= index + 1 %></td>
                <td class="py-4 px-4">
                  <code class="bg-gray-900 px-2 py-1 rounded text-sm"><%= user.userID || 'N/A' %></code>
                </td>
                <td class="py-4 px-4"><%= user.username || 'Unknown' %></td>
                <td class="py-4 px-4">
                  <span class="text-green-500">+<%= user.positive || 0 %></span>
                  <span class="mx-1">/</span>
                  <span class="text-red-500">-<%= user.negative || 0 %></span>
                </td>
                <td class="py-4 px-4">
                  <% if (user.isVerified) { %>
                    <span class="bg-green-500 bg-opacity-10 text-green-500 text-sm px-2 py-1 rounded-full">Verified</span>
                  <% } else { %>
                    <span class="bg-gray-500 bg-opacity-10 text-gray-400 text-sm px-2 py-1 rounded-full">Unverified</span>
                  <% } %>
                </td>
                <td class="py-4 px-4 text-right">
                  <div class="flex items-center justify-end space-x-2">
                    <button type="button" 
                            class="btn-hover-effect bg-blue-600 bg-opacity-20 text-blue-500 p-2 rounded-lg"
                            data-bs-toggle="modal" 
                            data-bs-target="#viewUserModal"
                            data-user-id="<%= user.userID %>"
                            data-username="<%= user.username %>"
                            data-positive="<%= user.positive || 0 %>"
                            data-negative="<%= user.negative || 0 %>"
                            data-verified="<%= user.isVerified ? 'true' : 'false' %>">
                      <i class="fas fa-eye"></i>
                    </button>
                    <button type="button" 
                            class="btn-hover-effect bg-yellow-600 bg-opacity-20 text-yellow-500 p-2 rounded-lg"
                            data-bs-toggle="modal" 
                            data-bs-target="#editUserModal"
                            data-user-id="<%= user.userID %>"
                            data-username="<%= user.username %>"
                            data-positive="<%= user.positive || 0 %>"
                            data-negative="<%= user.negative || 0 %>"
                            data-verified="<%= user.isVerified ? 'true' : 'false' %>">
                      <i class="fas fa-pencil"></i>
                    </button>
                    <button type="button" 
                            class="btn-hover-effect bg-red-600 bg-opacity-20 text-red-500 p-2 rounded-lg"
                            data-bs-toggle="modal" 
                            data-bs-target="#deleteUserModal"
                            data-user-id="<%= user.userID %>"
                            data-username="<%= user.username %>">
                      <i class="fas fa-trash"></i>
                    </button>
                  </div>
                </td>
              </tr>
            <% }); %>
          <% } else { %>
            <tr>
              <td colspan="6" class="py-4 px-4 text-center text-gray-500">No users found</td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>
  </div>
</div>

<!-- View User Modal -->
<div class="modal fade" id="viewUserModal" tabindex="-1" aria-labelledby="viewUserModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content glass-effect border border-gray-700 rounded-xl shadow-xl">
      <div class="modal-header border-b border-gray-700">
        <h5 class="modal-title text-white" id="viewUserModalLabel">User Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body text-center">
        <div class="mb-6">
          <div class="w-20 h-20 bg-indigo-600 bg-opacity-20 rounded-full flex items-center justify-center mx-auto mb-4">
            <i class="fas fa-user-circle text-4xl text-indigo-500"></i>
          </div>
          <h4 id="viewUsername" class="text-xl font-semibold text-white mb-2"></h4>
          <div id="viewUserStatus" class="inline-block"></div>
        </div>

        <div class="grid grid-cols-2 gap-4 mb-6">
          <div class="glass-effect rounded-lg p-4">
            <h5 class="text-green-500 text-xl font-bold mb-1">+<span id="viewPositive">0</span></h5>
            <div class="text-gray-400 text-sm">Positive Vouches</div>
          </div>
          <div class="glass-effect rounded-lg p-4">
            <h5 class="text-red-500 text-xl font-bold mb-1">-<span id="viewNegative">0</span></h5>
            <div class="text-gray-400 text-sm">Negative Vouches</div>
          </div>
        </div>

        <div class="text-left mb-4">
          <label class="text-sm font-medium text-gray-400 mb-2 block">Discord ID</label>
          <div class="flex">
            <input type="text" 
                   class="flex-1 bg-gray-900 border border-gray-700 text-white rounded-l-lg px-4 py-2" 
                   id="viewUserID" 
                   readonly>
            <button class="bg-gray-800 border border-l-0 border-gray-700 text-gray-400 rounded-r-lg px-4" 
                    onclick="copyToClipboard('viewUserID')">
              <i class="fas fa-copy"></i>
            </button>
          </div>
        </div>
      </div>
      <div class="modal-footer border-t border-gray-700">
        <button type="button" class="btn-hover-effect bg-gray-700 text-white px-4 py-2 rounded-lg" data-bs-dismiss="modal">
          Close
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content glass-effect border border-gray-700 rounded-xl shadow-xl">
      <div class="modal-header border-b border-gray-700">
        <h5 class="modal-title text-white" id="editUserModalLabel">Edit User</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <form action="/users/edit" method="POST">
        <div class="modal-body">
          <input type="hidden" id="editUserID" name="userID">

          <div class="mb-4">
            <label for="editUsername" class="block text-sm font-medium text-gray-400 mb-2">Username</label>
            <input type="text" 
                   class="w-full bg-gray-900 border border-gray-700 text-white rounded-lg px-4 py-2 focus:outline-none focus:border-indigo-500"
                   id="editUsername" 
                   name="username" 
                   required>
          </div>

          <div class="grid grid-cols-2 gap-4 mb-4">
            <div>
              <label for="editPositive" class="block text-sm font-medium text-gray-400 mb-2">Positive Vouches</label>
              <input type="number" 
                     class="w-full bg-gray-900 border border-gray-700 text-white rounded-lg px-4 py-2 focus:outline-none focus:border-indigo-500"
                     id="editPositive" 
                     name="positive" 
                     min="0" 
                     required>
            </div>
            <div>
              <label for="editNegative" class="block text-sm font-medium text-gray-400 mb-2">Negative Vouches</label>
              <input type="number" 
                     class="w-full bg-gray-900 border border-gray-700 text-white rounded-lg px-4 py-2 focus:outline-none focus:border-indigo-500"
                     id="editNegative" 
                     name="negative" 
                     min="0" 
                     required>
            </div>
          </div>

          <div class="flex items-center mb-4">
            <input type="checkbox" 
                   class="bg-gray-900 border-gray-700 rounded text-indigo-600 focus:ring-indigo-500" 
                   id="editVerified" 
                   name="isVerified">
            <label class="ml-2 text-gray-400" for="editVerified">User is verified</label>
          </div>

          <div class="bg-yellow-500 bg-opacity-10 border border-yellow-500 text-yellow-500 px-4 py-3 rounded-lg">
            <i class="fas fa-exclamation-triangle mr-2"></i>
            Editing user data directly may affect their Discord experience. Make changes with caution.
          </div>
        </div>
        <div class="modal-footer border-t border-gray-700">
          <button type="button" class="btn-hover-effect bg-gray-700 text-white px-4 py-2 rounded-lg" data-bs-dismiss="modal">
            Cancel
          </button>
          <button type="submit" class="btn-hover-effect bg-indigo-600 text-white px-4 py-2 rounded-lg ml-2">
            Save Changes
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Delete User Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content glass-effect border border-gray-700 rounded-xl shadow-xl">
      <div class="modal-header border-b border-gray-700">
        <h5 class="modal-title text-white" id="deleteUserModalLabel">Delete User</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="bg-red-500 bg-opacity-10 border border-red-500 text-red-500 px-4 py-3 rounded-lg mb-4">
          <i class="fas fa-exclamation-triangle mr-2"></i>
          Warning: This action cannot be undone.
        </div>
        <p class="text-gray-400 mb-4">Are you sure you want to delete this user?</p>
        <p>
          <strong class="text-white">User:</strong>
          <span id="deleteUsername" class="text-gray-400"></span>
        </p>
      </div>
      <div class="modal-footer border-t border-gray-700">
        <button type="button" class="btn-hover-effect bg-gray-700 text-white px-4 py-2 rounded-lg" data-bs-dismiss="modal">
          Cancel
        </button>
        <form id="deleteUserForm" action="/users/delete" method="POST" class="inline">
          <input type="hidden" id="deleteUserID" name="userID">
          <button type="submit" class="btn-hover-effect bg-red-600 text-white px-4 py-2 rounded-lg ml-2">
            Delete User
          </button>
        </form>
      </div>
    </div>
  </div>
</div>

<style>
  .btn-hover-effect {
    transition: all 0.3s ease;
  }

  .btn-hover-effect:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  }

  .card-hover {
    transition: all 0.3s ease;
  }

  .card-hover:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  }

  .glass-effect {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .scale-in {
    animation: scaleIn 0.3s ease-out;
  }

  @keyframes scaleIn {
    from { transform: scale(0.95); opacity: 0; }
    to { transform: scale(1); opacity: 1; }
  }

  .fade-in {
    animation: fadeIn 0.5s ease-out;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
  }
</style>

<script>
  function copyToClipboard(elementId) {
    const element = document.getElementById(elementId);
    navigator.clipboard.writeText(element.value).then(() => {
      console.log('Text copied to clipboard');
    }).catch(err => {
      console.error('Failed to copy: ', err);
    });
  }

  document.addEventListener('DOMContentLoaded', function() {
    // Search functionality
    const userSearch = document.getElementById('userSearch');
    userSearch.addEventListener('keyup', function() {
      const searchValue = this.value.toLowerCase();
      const table = document.getElementById('usersTable');
      const rows = table.getElementsByTagName('tr');

      for (let i = 1; i < rows.length; i++) {
        const row = rows[i];
        const cells = row.getElementsByTagName('td');
        let display = false;

        for (let j = 0; j < cells.length; j++) {
          const cell = cells[j];
          if (cell) {
            const text = cell.textContent || cell.innerText;
            if (text.toLowerCase().indexOf(searchValue) > -1) {
              display = true;
              break;
            }
          }
        }

        row.style.display = display ? '' : 'none';
      }
    });

    // View User Modal
    const viewUserModal = document.getElementById('viewUserModal');
    viewUserModal.addEventListener('show.bs.modal', function(event) {
      const button = event.relatedTarget;

      const userId = button.getAttribute('data-user-id');
      const username = button.getAttribute('data-username');
      const positive = button.getAttribute('data-positive');
      const negative = button.getAttribute('data-negative');
      const verified = button.getAttribute('data-verified') === 'true';

      document.getElementById('viewUsername').textContent = username;
      document.getElementById('viewUserID').value = userId;
      document.getElementById('viewPositive').textContent = positive;
      document.getElementById('viewNegative').textContent = negative;

      const statusBadge = document.getElementById('viewUserStatus');
      if (verified) {
        statusBadge.className = 'bg-green-500 bg-opacity-10 text-green-500 text-sm px-2 py-1 rounded-full';
        statusBadge.textContent = 'Verified';
      } else {
        statusBadge.className = 'bg-gray-500 bg-opacity-10 text-gray-400 text-sm px-2 py-1 rounded-full';
        statusBadge.textContent = 'Unverified';
      }
    });

    // Edit User Modal
    const editUserModal = document.getElementById('editUserModal');
    editUserModal.addEventListener('show.bs.modal', function(event) {
      const button = event.relatedTarget;

      const userId = button.getAttribute('data-user-id');
      const username = button.getAttribute('data-username');
      const positive = button.getAttribute('data-positive');
      const negative = button.getAttribute('data-negative');
      const verified = button.getAttribute('data-verified') === 'true';

      document.getElementById('editUserID').value = userId;
      document.getElementById('editUsername').value = username;
      document.getElementById('editPositive').value = positive;
      document.getElementById('editNegative').value = negative;
      document.getElementById('editVerified').checked = verified;
    });

    // Delete User Modal
    const deleteUserModal = document.getElementById('deleteUserModal');
    deleteUserModal.addEventListener('show.bs.modal', function(event) {
      const button = event.relatedTarget;

      const userId = button.getAttribute('data-user-id');
      const username = button.getAttribute('data-username');

      document.getElementById('deleteUserID').value = userId;
      document.getElementById('deleteUsername').textContent = username;
    });
  });
</script>

<%- include('partials/footer') %>